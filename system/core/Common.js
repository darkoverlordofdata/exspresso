// Generated by CoffeeScript 1.3.3
(function() {
  var $_classes, $_config, $_config_item, $_is_loaded, config_item, file_exists, get_config, is_loaded, load_class;

  file_exists = require('not-php').file_exists;

  $_config = [];

  $_config_item = {};

  $_classes = {};

  $_is_loaded = {};

  exports.load_class = load_class = function($class, $directory, $prefix) {
    var $name, $path, _i, _len, _ref;
    if ($directory == null) {
      $directory = 'libraries';
    }
    if ($prefix == null) {
      $prefix = '';
    }
    if ($_classes[$class] != null) {
      return $_classes[$class];
    }
    $name = false;
    _ref = [BASEPATH, APPPATH];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      $path = _ref[_i];
      if (file_exists($path + $directory + '/' + $class + EXT)) {
        $name = $prefix + $class;
        if (!(exspresso[$name] != null)) {
          require($path + $directory + '/' + $class + EXT);
        }
        break;
      }
    }
    if (file_exists(APPPATH + $directory + '/' + config_item('subclass_prefix') + $class + EXT)) {
      $name = config_item('subclass_prefix') + $class;
      if (!(exspresso[$name] != null)) {
        require(APPPATH + $directory + '/' + config_item('subclass_prefix') + $class + EXT);
      }
    }
    if ($name === false) {
      console.log('Unable to locate the specified class: ' + $class + EXT);
      process.exit(1);
    }
    is_loaded($class);
    $_classes[$class] = new $name();
    return $_classes[$class];
  };

  is_loaded = function($class) {
    if ($class == null) {
      $class = '';
    }
    if ($class !== '') {
      $_is_loaded[$class.toLowerCase()] = $class;
    }
    return $_is_loaded;
  };

  exports.get_config = get_config = function($replace) {
    var $config, $file_path, $key, $val;
    if ($replace == null) {
      $replace = {};
    }
    if ($_config[0] != null) {
      return $_config[0];
    }
    if (!file_exists($file_path = APPPATH + 'config/' + ENVIRONMENT + '/config')) {
      $file_path = APPPATH + 'config/config';
    }
    if (!file_exists($file_path)) {
      console.log('The configuration file does not exist.');
      process.exit(1);
    }
    $config = require($file_path);
    if (!($config != null)) {
      console.log('Your config file does not appear to be formatted correctly.');
      process.exit(1);
    }
    for ($val in $replace) {
      $key = $replace[$val];
      if ($config[$key] != null) {
        $config[$key] = $val;
      }
    }
    return $_config[0] = $config;
  };

  exports.config_item = config_item = function($item) {
    var $config;
    if (!($_config_item[$item] != null)) {
      $config = get_config();
      if (!($config[$item] != null)) {
        return false;
      }
      $_config_item[$item] = $config[$item];
    }
    return $_config_item[$item];
  };

}).call(this);
